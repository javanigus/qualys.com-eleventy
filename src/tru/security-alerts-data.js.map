{"version":3,"file":"security-alerts-data.js","names":["path","require","fs","http","crypto","URL","moment","mkdirp","contentful","client","createClient","space","localPath","QualysOpsRoot","readFileSync","resolve","__dirname","getContentfulData","getEntries","content_type","order","then","unWrapCollection","dir","getDataFromDiskCache","key","Promise","reject","digest","createHash","update","file","concat","readFile","err","rawData","toString","match","JSON","parse","console","log","Error","saveDataToDiskCache","value","writeFile","stringify","getVulnOfficeData","qids","url","join","data","vulnDataURL","pathname","search","options","hostname","port","method","ca","agent","Agent","get","res","statusCode","contentType","headers","test","resume","setEncoding","on","chunk","catch","module","exports","securityAlerts","filter","n","process","env","NODE_ENV","entry","publicationDate","isBefore","promisesOfSecurityAlerts","map","securityAlert","pubDate","parseZone","slug","format","vendor","toLowerCase","filename","month","year","vulns","forEach","vuln","severity","level","solutionDoesNotStartWithPatch","solution","vulnmapCVEs","reduce","p","c","vulnmap","cve","totalCVEs","Array","from","Set","length","manyCVEs","manyQIDs","all"],"sources":["../../site/pages/tru/security-alerts-data.js"],"sourcesContent":["\"use strict\";\n\nconst path = require(\"path\");\nconst fs = require(\"graceful-fs\");\nconst http = require(\"https\");\nconst crypto = require(\"crypto\");\nconst URL = require(\"url\");\n\nconst moment = require(\"moment-timezone\");\nconst mkdirp = require(\"mkdirp\");\n\nconst contentful = require(\"contentful-sync-cli/contentful-local\");\nconst client = contentful.createClient({\n\tspace: \"4l0w8syj29ap\",\n\tlocalPath: \"site/cache/contentful\"\n});\n\n// the certificate authority necessary to connect to vuln.intranet.qualys.com\nconst QualysOpsRoot = fs.readFileSync(path.resolve(\n\t__dirname,\n\t\"..\",\n\t\"..\",\n\t\"qualys-ops-root.pem\"\n));\n\n/**\n * getContentfulData - read JSON files in cache folder\n * @returns {Promise} a Promise\n */\nfunction getContentfulData () {\n\n\treturn client.getEntries({\n\t\tcontent_type: \"securityAlert\",\n\t\torder: \"-sys.updatedAt\"\n\t}).then(client.unWrapCollection);\n\n}\n\nconst dir = path.resolve(__dirname, \"..\", \"..\", \"cache\", \"vuln-office\");\n\n/**\n * check disk cache for data\n * @arg {String} the cache key to be hashed\n * @returns {Promise} of data from disk cache\n */\nfunction getDataFromDiskCache (key) {\n\n\treturn new Promise((resolve, reject) => {\n\n\t\tlet digest = crypto.createHash(\"sha256\").update(key).digest(\"hex\");\n\n\t\tif (digest) {\n\n\t\t\t// look for cache of URL by hash\n\t\t\tlet file = path.resolve(dir, `${digest}.json`);\n\n\t\t\t// read in data from file\n\t\t\tfs.readFile(file, (err, rawData) => {\n\n\t\t\t\tif (err) {\n\n\t\t\t\t\t// silently handle file not found errors\n\t\t\t\t\tif (err.toString().match(/ENOENT/)) {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresolve(JSON.parse(rawData));\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t/* eslint-disable no-console */\n\t\t\t\t\t\tconsole.log(`rawData: ${rawData}`);\n\t\t\t\t\t\t/* eslint-enable no-console */\n\t\t\t\t\t\tthrow new Error(`Unable to parse JSON data in ${file}. Data came from ${key}`);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t} else {\n\n\t\t\treject(new Error(`Hash digest could not be generated for ${key}`));\n\n\t\t}\n\n\t});\n\n}\n\n\n/**\n * save cached data to disk\n * @arg {Object} data\n * @returns {Promise} of data saved\n */\nfunction saveDataToDiskCache (key, value) {\n\n\treturn new Promise((resolve, reject) => {\n\n\t\tlet digest = crypto.createHash(\"sha256\").update(key).digest(\"hex\");\n\n\t\tif (digest) {\n\n\t\t\t// look for cache of URL by hash\n\t\t\tlet file = path.resolve(dir, `${digest}.json`);\n\n\t\t\t// ensure directory exists\n\t\t\tmkdirp(dir, (err) => {\n\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t} else {\n\n\t\t\t\t\t// write value to file\n\t\t\t\t\tfs.writeFile(file, JSON.stringify(value, null, 4), (err) => {\n\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresolve(value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t} else {\n\n\t\t\treject(new Error(`Hash digest could not be generated for ${key}`));\n\n\t\t}\n\n\t});\n\n}\n\n/**\n * getVulnOfficeData\n * @arg {Array} qids\n * @returns {Promise} of data for bulletins\n */\nfunction getVulnOfficeData (qids) {\n\n\tif (!qids) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\n\t\tlet url;\n\n\t\turl = \"https://vuln.intranet.qualys.com/main/ms_bulletin/ms_bulletin_api.php?\";\n\t\turl += qids.join(\",\");\n\n\t\tgetDataFromDiskCache(url).then((data) => {\n\n\t\t\tif (data) {\n\n\t\t\t\tresolve(data);\n\n\t\t\t} else {\n\n\t\t\t\t// workaround since node 6 is missing http.get(url, option, cb)\n\t\t\t\tconst vulnDataURL = URL.parse(url);\n\t\t\t\tif (!vulnDataURL.path) {\n\t\t\t\t\tvulnDataURL.path = `${vulnDataURL.pathname}${vulnDataURL.search}`;\n\t\t\t\t}\n\t\t\t\tconst options = {\n\t\t\t\t\thostname: vulnDataURL.hostname,\n\t\t\t\t\tport: 443,\n\t\t\t\t\tpath: vulnDataURL.path,\n\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\tca: QualysOpsRoot\n\t\t\t\t};\n\t\t\t\toptions.agent = new http.Agent(options);\n\n\t\t\t\t// get URL contents\n\t\t\t\thttp.get(options, (res) => {\n\n\t\t\t\t\tconst statusCode = res.statusCode;\n\t\t\t\t\tconst contentType = res.headers[\"content-type\"];\n\t\t\t\t\tlet err;\n\t\t\t\t\tif (statusCode !== 200) {\n\n\t\t\t\t\t\terr = new Error(`Request Failed. Status Code: ${statusCode}`);\n\n\t\t\t\t\t} else if (!/^application\\/json/.test(contentType)) {\n\n\t\t\t\t\t\terr = new Error(`Invalid content-type. Expected application/json but received ${contentType}`);\n\n\t\t\t\t\t}\n\t\t\t\t\tif (err) {\n\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t// consume response data to free up memory\n\t\t\t\t\t\tres.resume();\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\t\t\t\t\tres.setEncoding(\"utf8\");\n\t\t\t\t\tlet rawData = \"\";\n\t\t\t\t\tres.on(\"data\", (chunk) => rawData += chunk);\n\t\t\t\t\tres.on(\"end\", () => {\n\n\t\t\t\t\t\ttry {\n\n\t\t\t\t\t\t\tsaveDataToDiskCache(url, JSON.parse(rawData))\n\t\t\t\t\t\t\t\t.then(resolve)\n\t\t\t\t\t\t\t\t.catch(reject);\n\n\t\t\t\t\t\t} catch (err) {\n\n\t\t\t\t\t\t\treject(err);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\n\t\t\t\t}).on(\"error\", (err) => {\n\n\t\t\t\t\treject(err);\n\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t}).catch(reject);\n\n\t});\n\n}\n\n// get all security alerts form the Contentful cache\nmodule.exports = getContentfulData().then((securityAlerts) => {\n\n\t// filter out false-y items\n\tsecurityAlerts = securityAlerts.filter(n => n);\n\n\t// filter out entries with future publication dates\n\tif (process.env.NODE_ENV === \"production\") {\n\t\tsecurityAlerts = securityAlerts.filter(entry => moment(entry.publicationDate).isBefore());\n\t}\n\n\t// loop over them\n\tvar promisesOfSecurityAlerts = securityAlerts.map(securityAlert => {\n\n\t\t// generate URL slug\n\t\tlet pubDate = moment.parseZone(securityAlert.publicationDate);\n\t\tlet slug = pubDate.format(\"YYYY-MM-DD\");\n\t\tlet vendor = securityAlert.vendor.toLowerCase();\n\t\tsecurityAlert.filename = `${slug}/${vendor}/index.html`;\n\n\t\t// add full month name and full year too\n\t\tsecurityAlert.month = pubDate.format(\"MMMM\");\n\t\tsecurityAlert.year = pubDate.format(\"YYYY\");\n\n\t\t// get bulletins from Vuln Office based on QIDs in alert\n\t\t// use local disk cache if available\n\t\t// combine bulletins with each alert and return JSON\n\t\treturn getVulnOfficeData(securityAlert.qids).then(vulns => {\n\n\t\t\tsecurityAlert.vulns = vulns;\n\n\t\t\tsecurityAlert.vulns.forEach(function (vuln) {\n\n\t\t\t\t// set level based on severity of each vuln\n\t\t\t\tswitch (vuln.severity) {\n\t\t\t\tcase 5:\n\t\t\t\t\tvuln.level = \"Urgent\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tvuln.level = \"Critical\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tvuln.level = \"Serious\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tvuln.level = \"Medium\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\tdefault:\n\t\t\t\t\tvuln.level = \"Minimal\";\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// check if the solution contains a list of patches\n\t\t\t\tlet pattern = /^\\s*Patch/;\n\t\t\t\tvuln.solutionDoesNotStartWithPatch = !pattern.test(vuln.solution);\n\n\t\t\t});\n\n\t\t\t// count up all CVEs\n\t\t\tlet vulnmapCVEs = vulns.reduce((p, c) => {\n\t\t\t\tif (c.vulnmap && c.vulnmap.cve) {\n\t\t\t\t\treturn p.concat(c.vulnmap.cve);\n\t\t\t\t} else {\n\t\t\t\t\treturn p;\n\t\t\t\t}\n\t\t\t}, []);\n\n\t\t\t// Sets are always unique\n\t\t\tsecurityAlert.totalCVEs = Array.from(new Set(vulnmapCVEs)).length;\n\n\t\t\t// needed for outputting plurals or not\n\t\t\tsecurityAlert.manyCVEs = securityAlert.totalCVEs >= 2;\n\t\t\tsecurityAlert.manyQIDs = securityAlert.vulns.length || 0 >= 2;\n\n\t\t\treturn securityAlert;\n\n\t\t});\n\n\t});\n\n\treturn Promise.all(promisesOfSecurityAlerts);\n\n});\n"],"mappings":"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"}